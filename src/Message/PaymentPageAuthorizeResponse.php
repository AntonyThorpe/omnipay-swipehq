<?php namespace Omnipay\Swipehq\Message;

use Omnipay\Common\Message\AbstractResponse;
use Omnipay\Common\Message\RedirectResponseInterface;

/**
 * Payment Page Authorize Response
 *
 * From PaymentPageAuthorizeRequest
 * Process the response from Authorize Request.  Response example {"response_code":200,"message":"OK","data":{"identifier":"XXXX"}} and prepare address for redirection of the browser
 */


class PaymentPageAuthorizeResponse extends AbstractResponse implements RedirectResponseInterface
{
    protected $endpoint = 'https://payment.swipehq.com';

    /**
     * Get a message generated by the payment gateway
     *
     * @return string Message e.g. OK
     */
    public function getMessage()
    {
        return isset($this->data['message']) ? (string) $this->data['message'] : null;
    }


    /**
     * Response code
     *
     * @return string A response code from the payment gateway. e.g. 200
     */
    public function getCode()
    {
        return isset($this->data['response_code']) ? (string) $this->data['response_code'] : null;
    }


    /**
     * Gateway Reference
     *
     * @return string A reference provided by the gateway to represent this transaction.  The identifier.
     */
    public function getTransactionReference()
    {
        if (empty($this->data['data'])) {
            return null;
        } else {
            $data = $this->data['data'];
            if (empty($data['identifier'])) {
                return null;
            } else {
                return (string) $data['identifier'];
            }
        }
    }


    /**
     * Is the response successful?
     *
     * As we need to redirect the browser we return false (the transaction is not yet complete)
     * @return boolean
     */
    public function isSuccessful()
    {
        return false;
    }


    /**
     * Does the response require a redirect?
     *
     * redirected to the offsite payment gateway to process the credit card
     * @return boolean
     */
    public function isRedirect()
    {
        return true;
    }


    /**
     * Gets the redirect target url
     *
     * Example: https://payment.swipehq.com/?identifier_id=XXXX
     * @ return url
     */
    public function getRedirectUrl()
    {
        return $this->endpoint . '/?' . http_build_query($this->getRedirectData());
    }


    /**
     * Get the required redirect method (either GET or POST).
     *
     * @return string
     */
    public function getRedirectMethod()
    {
        return 'GET';
    }


    /**
     * Gets the redirect data array
     *
     * @ return array
     */
    public function getRedirectData()
    {
        return array('identifier_id' => $this->getTransactionReference());
    }
}
